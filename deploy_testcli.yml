---
- hosts: testcli1
  vars:
    custom_repo: true
    deploy_iptables: true
    envir: PROD
#   envir: DEV.local
  vars_files:
    - ~/RHACCOUNT
  become: yes
  become_method: sudo

  pre_tasks:
    - debug:
#       msg: "Variables: _uid = {{ _uid }}, _pwd = **********"
        msg: "Variables: _uid = {{ _uid }}, _pwd = {{ _pwd }}"
    - name: register RHEL7.5
      command: "/usr/bin/subscription-manager register --username {{ _uid }} --password {{ _pwd }} --auto-attach --force"
#     when: _uid != "" and _pwd != ""
#     command: "/usr/bin/subscription-manager register --username <name> --password <password> --auto-attach"
    - name: register RHEL7 repos necessary for Chrome (optional, extras)
      command: "/usr/bin/subscription-manager repos --enable=rhel-7-server-rpms --enable=rhel-7-server-extras-rpms --enable=rhel-7-server-optional-rpms"
    - name: register RHEL7 RHSCL Repo
      shell: "/usr/bin/subscription-manager repos --enable=rhel-server-rhscl-7-rpms"
    - name: register RHEL7 DevTools
      shell: "/usr/bin/subscription-manager repos --enable=rhel-7-server-devtools-rpms"
    - name: list RHEL enabled repos
      shell: "/usr/bin/subscription-manager repos --list-enabled"
      register: enabled_repos
    - debug:
        msg: "RHEL Enabled Repos: {{ enabled_repos }}"

  tasks:
    - name: install libselinux-python
      yum:
        name: libselinux-python
        state: present
  roles:
#   - {role: common, when: "install_glusterfs"}
#   - {role: puppet_disable, when: "disable_puppet"}
#   - {role: iptables, when: "iptables_config"}
#   - gocd_server
#   - gocd
    - postgresql13-clientRH7

- hosts: testcli2 
  vars:
    custom_repo: true
    deploy_iptables: true
    envir: PROD
#   envir: DEV.local
  vars_files:
    - ~/RHACCOUNT
  become: yes
  become_method: sudo
# serial: 1
# max_fail_percentage: 10

  pre_tasks:
    - debug:
#       msg: "Variables: _uid = {{ _uid }}, _pwd = **********"
        msg: "Variables: _uid = {{ _uid }}, _pwd = {{ _pwd }}"
    - name: register RHEL7.5
      command: "/usr/bin/subscription-manager register --username {{ _uid }} --password {{ _pwd }} --auto-attach --force"
#     when: _uid != "" and _pwd != ""
#     command: "/usr/bin/subscription-manager register --username <name> --password <password> --auto-attach"
    - name: register RHEL7 repos necessary for Chrome (optional, extras)
      command: "/usr/bin/subscription-manager repos --enable=rhel-7-server-rpms --enable=rhel-7-server-extras-rpms --enable=rhel-7-server-optional-rpms"
    - name: register RHEL7 RHSCL Repo
      shell: "/usr/bin/subscription-manager repos --enable=rhel-server-rhscl-7-rpms"
    - name: register RHEL7 DevTools
      shell: "/usr/bin/subscription-manager repos --enable=rhel-7-server-devtools-rpms"
    - name: list RHEL enabled repos
      shell: "/usr/bin/subscription-manager repos --list-enabled"
      register: enabled_repos
    - debug:
        msg: "RHEL Enabled Repos: {{ enabled_repos }}"

  roles:
#   - {role: common, when: "install_glusterfs"}
#    - devtools
#   - devtools6
    - postgresql13-clientRH7

- hosts: testcli3
  vars:
    custom_repo: true
    deploy_iptables: true
    envir: PROD
#   envir: DEV.local
  vars_files:
    - ~/RHACCOUNT
  become: yes
  become_method: sudo

  pre_tasks:
    - debug:
#       msg: "Variables: _uid = {{ _uid }}, _pwd = **********"
        msg: "Variables: _uid = {{ _uid }}, _pwd = {{ _pwd }}"
    - name: register RHEL7.5
      command: "/usr/bin/subscription-manager register --username {{ _uid }} --password {{ _pwd }} --auto-attach --force"
#     when: _uid != "" and _pwd != ""
#     command: "/usr/bin/subscription-manager register --username <name> --password <password> --auto-attach"
    - name: register RHEL7 repos necessary for Chrome (optional, extras)
      command: "/usr/bin/subscription-manager repos --enable=rhel-7-server-rpms --enable=rhel-7-server-extras-rpms --enable=rhel-7-server-optional-rpms"
    - name: register RHEL7 RHSCL Repo
      shell: "/usr/bin/subscription-manager repos --enable=rhel-server-rhscl-7-rpms"
    - name: register RHEL7 DevTools
      shell: "/usr/bin/subscription-manager repos --enable=rhel-7-server-devtools-rpms"
    - name: list RHEL enabled repos
      shell: "/usr/bin/subscription-manager repos --list-enabled"
      register: enabled_repos
    - debug:
        msg: "RHEL Enabled Repos: {{ enabled_repos }}"

  tasks:
    #- name: Activate Julia repo
    #  get_url:
    #    url: https://copr.fedoraproject.org/coprs/nalimilan/julia/repo/epel-6/nalimilan-julia-epel-6.repo
    #    dest: /etc/yum.repos.d/nalimilan-julia-epel-6.repo
    #  when: not 'production' in group_names

    - name: Install additional packages
      yum:
        name: "{{ item }}"
        state: present
      with_items:
        - "@development"
        - screen
        - p7zip
    #    - julia

    - name: Install Additional Database Automation packages
      yum:
        name: "{{ item }}"
        state: present
      with_items:
        - htop
        - rsync
        - unzip
        - gpg
        - pigz
        - facter
        - sysstat # sar, iostat, vmstat
        - systemtap # dtrace equivalent
        - ant

    - name: Install Database Automation custom packages
      yum:
        name: "{{ item }}"
        state: "{{ db_automation_package_state }}"
        disable_gpg_check: yes
      with_items: "{{ db_automation_custom_packages }}"
      when: db_automation_custom_packages is defined

- hosts: testcli_terminal
  vars:
    custom_repo: true
    deploy_iptables: true
    envir: PROD
#   envir: DEV.local
  vars_files:
    - ~/RHACCOUNT
  become: yes
  become_method: sudo

  pre_tasks:
    - debug:
#       msg: "Variables: _uid = {{ _uid }}, _pwd = **********"
        msg: "Variables: _uid = {{ _uid }}, _pwd = {{ _pwd }}"
    - name: register RHEL7.5
      command: "/usr/bin/subscription-manager register --username {{ _uid }} --password {{ _pwd }} --auto-attach --force"
#     when: _uid != "" and _pwd != ""
#     command: "/usr/bin/subscription-manager register --username <name> --password <password> --auto-attach"
    - name: register RHEL7 repos necessary for Chrome (optional, extras)
      command: "/usr/bin/subscription-manager repos --enable=rhel-7-server-rpms --enable=rhel-7-server-extras-rpms --enable=rhel-7-server-optional-rpms"
    - name: register RHEL7 RHSCL Repo
      shell: "/usr/bin/subscription-manager repos --enable=rhel-server-rhscl-7-rpms"
    - name: register RHEL7 DevTools
      shell: "/usr/bin/subscription-manager repos --enable=rhel-7-server-devtools-rpms"
    - name: list RHEL enabled repos
      shell: "/usr/bin/subscription-manager repos --list-enabled"
      register: enabled_repos
    - debug:
        msg: "RHEL Enabled Repos: {{ enabled_repos }}"

  roles:
#   - {role: common, when: "install_glusterfs"}
#   - devtools
#   - {role: puppet_disable, when: "disable_puppet"}
#   - {role: iptables, when: "iptables_config"}
#   - {role: epel, when: "use_epel and not 'production' in group_names"}
#   - eod
#   - talend # Talend goes here because it installs an older java
#   - gocd
#   - {role: python, when: "custom_repo"}
#   - {role: python-build, when: "not custom_repo"}
#   - {role: python3, when: "custom_repo"}
#   - {role: python3-build, when: "not custom_repo"}
#   - python-libs
#   - r-core
#   - r-libs
#   - {role: ruby, when: "install_ruby"}
#   - pycharm
#   - r-studio-desktop
#   - clouseau
#   - {role: pentaho, when: "install_pentaho"}
#   - sublime
#   - julia
    - postgresql13-clientRH7

  tasks:
    - name: Install development packages
      yum:
        name: "{{ item }}"
        state: present
        disable_gpg_check: yes
      with_items:
        - "@development"
        - gcc-gfortran
        - python-devel
        - nodejs

    - name: Install custom RPMs
      yum:
        name: "{{ item }}"
        state: present
        disable_gpg_check: yes
      with_items:
        - xsv
        - gnucobol
        - htop
        - p7zip
        - sf-dataloader
      when: custom_repo

    - name: Install Database Automation custom packages
      yum:
        name: "{{ item }}"
        state: "{{ db_automation_package_state }}"
        disable_gpg_check: yes
      with_items: "{{ db_automation_custom_packages }}"
      when: db_automation_custom_packages is defined
